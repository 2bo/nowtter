<?php

/**
 * BaseMUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @property integer $sf_guard_user_id
 * @property string $user_name
 * @property string $email
 * @property string $profile
 * @property date $birthday
 * @property boolean $is_private
 * @property sfGuardUser $sfGuardUser
 * @property Doctrine_Collection $Tweets
 * @property Doctrine_Collection $Follows
 * @property Doctrine_Collection $Favorites
 * @property Doctrine_Collection $Retweets
 *
 * @method integer             getSfGuardUserId()    Returns the current record's "sf_guard_user_id" value
 * @method string              getUserName()         Returns the current record's "user_name" value
 * @method string              getEmail()            Returns the current record's "email" value
 * @method string              getProfile()          Returns the current record's "profile" value
 * @method date                getBirthday()         Returns the current record's "birthday" value
 * @method boolean             getIsPrivate()        Returns the current record's "is_private" value
 * @method sfGuardUser         getSfGuardUser()      Returns the current record's "sfGuardUser" value
 * @method Doctrine_Collection getTweets()           Returns the current record's "Tweets" collection
 * @method Doctrine_Collection getFollows()          Returns the current record's "Follows" collection
 * @method Doctrine_Collection getFavorites()        Returns the current record's "Favorites" collection
 * @method Doctrine_Collection getRetweets()         Returns the current record's "Retweets" collection
 * @method MUser               setSfGuardUserId()    Sets the current record's "sf_guard_user_id" value
 * @method MUser               setUserName()         Sets the current record's "user_name" value
 * @method MUser               setEmail()            Sets the current record's "email" value
 * @method MUser               setProfile()          Sets the current record's "profile" value
 * @method MUser               setBirthday()         Sets the current record's "birthday" value
 * @method MUser               setIsPrivate()        Sets the current record's "is_private" value
 * @method MUser               setSfGuardUser()      Sets the current record's "sfGuardUser" value
 * @method MUser               setTweets()           Sets the current record's "Tweets" collection
 * @method MUser               setFollows()          Sets the current record's "Follows" collection
 * @method MUser               setFavorites()        Sets the current record's "Favorites" collection
 * @method MUser               setRetweets()         Sets the current record's "Retweets" collection
 * 
 * @package    nowtter
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('m_user');
        $this->hasColumn('sf_guard_user_id', 'integer', null, array(
            'type' => 'integer',
            'unique' => true,
        ));
        $this->hasColumn('user_name', 'string', 255, array(
            'type' => 'string',
            'notnull' => 'ture',
            'unique' => true,
            'length' => 255,
        ));
        $this->hasColumn('email', 'string', 255, array(
            'type' => 'string',
            'length' => 255,
        ));
        $this->hasColumn('profile', 'string', 1000, array(
            'type' => 'string',
            'length' => 1000,
        ));
        $this->hasColumn('birthday', 'date', null, array(
            'type' => 'date',
        ));
        $this->hasColumn('is_private', 'boolean', null, array(
            'type' => 'boolean',
            'notnull' => true,
            'default' => 0,
        ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser', array(
            'local' => 'sf_guard_user_id',
            'foreign' => 'id',
            'onDelete' => 'CASCADE'));

        $this->hasMany('TTweet as Tweets', array(
            'local' => 'id',
            'foreign' => 'user_id'));

        $this->hasMany('TFollow as Follows', array(
            'local' => 'id',
            'foreign' => 'user_id'));

        $this->hasMany('TFavorite as Favorites', array(
            'local' => 'id',
            'foreign' => 'user_id'));

        $this->hasMany('TRetweet as Retweets', array(
            'local' => 'id',
            'foreign' => 'user_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}